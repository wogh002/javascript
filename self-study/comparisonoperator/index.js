//비교연산자는 boolean 값을 반환한다.
alert(2 > 1); //true
alert(2 == 1); //false
alert(2 != 1) //true
let result = 5 > 4;
console.log(result);
//자바스크립트는 정확히는 사전순이 아니라 유니코드 순으로 비교한다.
//'사전편집(lexicographical)'순 이라고 불리기도 하는 이 기준을 적용하면 사전 뒤쪽의 문자열은 사전 앞쪽의 문자열보다 크다고 판단됩니다
alert('Z' > 'A') //true.
alert('Glow' > 'Glee'); // true
alert('Bee' > 'Be'); // true
//예시의 'Z' > 'A'는 위 알고리즘의 첫 번째 단계에서 비교 결과가 도출됩니다. 반면, 문자열 "Glow"와 "Glee"는 복수의 문자로 이루어진 문자열이기 때문에, 아래와 같은 순서로 문자열 비교가 이뤄집니다.

//G는 G와 같습니다.
//l은 l과 같습니다.
//o는 e보다 크기 때문에 여기서 비교가 종료되고, o가 있는 첫 번째 문자열 "Glow"가 더 크다는 결론이 도출됩니다.
//차이점 중 하나는 자바스크립트는 대·소문자를 따진다는 것입니다. 대문자 "A"와 소문자 "a"를 비교했을 때 소문자 "a"가 더 큽니다.
//자바스크립트 내부에서 사용되는 인코딩 표인 유니코드에선 소문자가 대문자보다 더 큰 인덱스를 갖기 때문이죠. 
//이와 관련한 자세한 내용은 문자열 챕터에서 다루도록 하겠습니다.


//비교하려는 값의 자료형이 다르면 자바스크립트는 이 값들을 숫자형으로 바꿉니다.(동등연산자)
console.log('2' > 1); //true
console.log('01' == 1); //true

//불린값의 경우 true는 1, false는 0으로 변환된 후 비교가 이뤄집니다.
alert( true == 1 ); // true
alert( false == 0 ); // true