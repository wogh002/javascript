//하지만 함수 선언문은 조금 다릅니다.
//함수 선언문은 함수 선언문이 정의되기 전에도 호출할 수 있습니다.
//따라서 전역 함수 선언문은 스크립트 어디에 있느냐에 상관없이 어디에서든 사용할 수 있습니다.
//스크립트는 함수 선언문이 모두 처리된 이후에서야 실행됩니다. 따라서 스크립트 어디서든 함수 선언문으로 선언한 함수에 접근할 수 있는 것입니다.
sayHi('John');
function sayHi(name) {
    alert(`Hello ${name}`)
};

//그러나 함수 표현식으로 정의한 함수는 함수가 선언되기 전에 접근하는 게 불가능합니다.
sayHi("John"); // error!
let sayHi = function (name) {  // (*) 마술은 일어나지 않습니다.
    alert(`Hello, ${name}`);
};

//일반적으로 함수를 선언 한 후 그것을 호출해서 사용을한다.
//함수 표현식은 실행 흐름이 표현식에 다다랐을 때 만들어집니다. 위 예시에선 (*)로 표시한 줄에 실행 흐름이 도달했을 때 함수가 만들어집니다. 아주 늦죠.
//선언문과 표현식의 차이점.

